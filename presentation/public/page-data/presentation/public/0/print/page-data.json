{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/presentation/public/0/print","webpackCompilationHash":"ca47c31b609b9218a43d","result":{"data":{"deck":{"id":"7b6d74c5-ae13-5191-8b20-552a1d91e72b","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar themes = defaultThemes;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  themes: themes,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"React\\u5347\\u7248\\u8A08\\u756B\")), mdx(\"hr\", null), mdx(\"h1\", null, \"React 15.6.2 -> 16.12.0\"), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u904E\\u6642\\u7684 Component \\u751F\\u547D\\u9031\\u671F\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"1. componentWillMount()\\n2. componentWillUpdate()\\n3. componentWillReceiveProps()\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1 subtitle=\\\"在 mounting 發生前被呼叫\\\"\",\n    \"subtitle\": \"\\\"在\",\n    \"mounting\": true,\n    \"發生前被呼叫\\\"\": true\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"    componentWillMount() {\\n        new Ajax({\\n            url: '/hrm2/api/company/picker/departments',\\n            method: 'get',\\n            onSuccess: (code, msg, data, xhr) => {\\n                this.setState({\\n                    deps: data\\n                });\\n            }\\n        }).send();\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"6:8\",\n    \"6:8\": true\n  }), \"    componentWillMount() {\\n        new Ajax({\\n            url: '/hrm2/api/company/picker/departments',\\n            method: 'get',\\n            onSuccess: (code, msg, data, xhr) => {\\n                this.setState({\\n                    deps: data\\n                });\\n            }\\n        }).send();\\n    }\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markup\"\n  }), \"\\u521D\\u59CB\\u5316 state\\nsetState\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markup\",\n    \"metastring\": \"diff 1:2\",\n    \"diff\": true,\n    \"1:2\": true\n  }), \"\\u521D\\u59CB\\u5316 state\\n    - constructor()\\nsetState\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markup\",\n    \"metastring\": \"diff 3:4\",\n    \"diff\": true,\n    \"3:4\": true\n  }), \"\\u521D\\u59CB\\u5316 state\\n    - constructor()\\nsetState\\n    - componentDidMount()\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"1. componentWillMount()\\n2. componentWillUpdate()\\n3. componentWillReceiveProps()\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"diff 2 subtitle=\\\"render 發生之前、state 更新之前、prop 更新之前\\\"\",\n    \"diff\": true,\n    \"subtitle\": \"\\\"render\",\n    \"發生之前、state\": true,\n    \"更新之前、prop\": true,\n    \"更新之前\\\"\": true\n  }), \"1. componentWillMount()\\n2. componentWillUpdate()\\n3. componentWillReceiveProps()\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"componentWillUpdate(nextProps, nextState, nextContext) {\\n    const {empId} = this.props;\\n    if(empId != nextProps.empId)\\n        this._loadPhoto(nextProps.empId);\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"通常可以用 componentDidUpdate() 取代\\\"\",\n    \"subtitle\": \"\\\"通常可以用\",\n    \"componentDidUpdate()\": true,\n    \"取代\\\"\": true\n  }), \"\\ncomponentWillUpdate(nextProps, nextState, nextContext) {\\n    const {empId} = this.props;\\n    if(empId != nextProps.empId)\\n        this._loadPhoto(nextProps.empId);\\n}\\n\\ncomponentDidUpdate(prevProps, prevState, snapshot) {\\n    const {empId} = this.props;\\n    if(empId != prevProps.empId)\\n        this._loadPhoto(empId);\\n}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"diff 3\",\n    \"diff\": true\n  }), \"1. componentWillMount()\\n2. componentWillUpdate()\\n3. componentWillReceiveProps()\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markup\"\n  }), \"componentWillReceiveProps()\\n\\n    * \\u9700\\u8981\\u5728\\u67D0\\u500B prop \\u6539\\u8B8A\\u6642 \\u57F7\\u884C\\u4E00\\u500B\\u76F8\\u5C0D\\u61C9\\u7684 side effect\\n    * \\u5728\\u67D0\\u500B prop \\u6539\\u8B8A\\u6642\\u300C\\u91CD\\u7F6E\\u300D\\u67D0\\u500B state\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markup\",\n    \"metastring\": \"diff 3:4\",\n    \"diff\": true,\n    \"3:4\": true\n  }), \"componentWillReceiveProps()\\n\\n    * \\u9700\\u8981\\u5728\\u67D0\\u500B prop \\u6539\\u8B8A\\u6642 \\u57F7\\u884C\\u4E00\\u500B\\u76F8\\u5C0D\\u61C9\\u7684 side effect\\n        - componentDidUpdate()\\n    * \\u5728\\u67D0\\u500B prop \\u6539\\u8B8A\\u6642\\u300C\\u91CD\\u7F6E\\u300D\\u67D0\\u500B state\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markup\",\n    \"metastring\": \"diff 5:6\",\n    \"diff\": true,\n    \"5:6\": true\n  }), \"componentWillReceiveProps()\\n\\n    * \\u9700\\u8981\\u5728\\u67D0\\u500B prop \\u6539\\u8B8A\\u6642 \\u57F7\\u884C\\u4E00\\u500B\\u76F8\\u5C0D\\u61C9\\u7684 side effect\\n        - componentDidUpdate()\\n    * \\u5728\\u67D0\\u500B prop \\u6539\\u8B8A\\u6642\\u300C\\u91CD\\u7F6E\\u300D\\u67D0\\u500B state\\n        - \\u5EFA\\u7ACB\\u4E00\\u500B\\u5B8C\\u5168\\u88AB\\u63A7\\u5236 \\u7684 component \\u6216\\u5E36\\u6709 key \\u7684\\u5B8C\\u5168\\u88AB\\u63A7\\u5236 component\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"完全被控制 的 component\\\"\",\n    \"subtitle\": \"\\\"完全被控制\",\n    \"的\": true,\n    \"component\\\"\": true\n  }), \"function EmailInput(props) {\\n  return <input\\n              onChange={props.onChange}\\n              value={props.email}\\n         />;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"diff 3:4\",\n    \"diff\": true,\n    \"3:4\": true\n  }), \"function EmailInput(props) {\\n  return <input\\n              onChange={props.onChange}\\n              value={props.email}\\n         />;\\n}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"帶有 key 的完全被控制 component\\\"\",\n    \"subtitle\": \"\\\"帶有\",\n    \"key\": true,\n    \"的完全被控制\": true,\n    \"component\\\"\": true\n  }), \"class EmailInput extends Component {\\n  state = { email: this.props.defaultEmail };\\n\\n  handleChange = event => {\\n    this.setState({ email: event.target.value });\\n  };\\n\\n  render() {\\n    return <input onChange={this.handleChange} value={this.state.email} />;\\n  }\\n}\\n\\n<EmailInput\\n   defaultEmail={this.props.user.email}\\n   key={this.props.user.id}\\n />\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"diff 2,14:15\",\n    \"diff\": true,\n    \"2,14:15\": true\n  }), \"class EmailInput extends Component {\\n  state = { email: this.props.defaultEmail };\\n\\n  handleChange = event => {\\n    this.setState({ email: event.target.value });\\n  };\\n\\n  render() {\\n    return <input onChange={this.handleChange} value={this.state.email} />;\\n  }\\n}\\n\\n<EmailInput\\n   defaultEmail={this.props.user.email}\\n   key={this.props.user.id}\\n />\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"memory leaks\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: Can't perform a React state update on an unmounted component.\\nThis is a no-op, but it indicates a memory leak in your application.\\nTo fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\\n\\ncomponentDidMount() {\\n    new Ajax({\\n        url: '/hrm2/api/auth/module',\\n        method: 'get',\\n        onSuccess: (code, msg, data, xhr) => {\\n            this.setState({ m4: data.includes(4) })\\n        }\\n    }).send();\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: Can't perform a React state update on an unmounted component.\\nThis is a no-op, but it indicates a memory leak in your application.\\nTo fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\\n\\ncomponentDidMount() {\\n    this.mounted = true;\\n    new Ajax({\\n        url: '/hrm2/api/auth/module',\\n        method: 'get',\\n        onSuccess: (code, msg, data, xhr) => {\\n            if (this.mounted) {\\n                this.setState({ m4: data.includes(4) })\\n            }\\n        }\\n    }).send();\\n}\\n\\ncomponentWillUnmount() {\\n    this.mounted = false;\\n}\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u5E38\\u898B\\u932F\\u8AA4\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: Expected `onClick` listener to be a function,\\ninstead got a value of `string` type.\\n\\n// Before\\nonClick={someHandler.bind(this, ...arguments)}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: Expected `onClick` listener to be a function,\\ninstead got a value of `string` type.\\n\\n// Before\\nonClick={someHandler.bind(this, ...arguments)}\\n\\n// After\\nonClick={() => someHandler(...arguments)}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: Invalid value for prop `data-display` on <td> tag. \\nEither remove it from the element, or pass a string or number value to keep it in the DOM.\\n\\n// Before\\n<td width=\\\"20%\\\" data-display={function(data){...}}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: Invalid value for prop `data-display` on <td> tag. \\nEither remove it from the element, or pass a string or number value to keep it in the DOM.\\n\\n// Before\\n<td width=\\\"20%\\\" data-display={function(data){...}}\\n\\n// After\\n<td width=\\\"20%\\\" data-display={`function(data){...}`}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: React does not recognize the `data-td-cssClass` prop on a DOM element.\\nIf you intentionally want it to appear in the DOM as a custom attribute,\\nspell it as lowercase `data-td-cssclass` instead\\n\\n// Before\\n<td width=\\\"35%\\\" data-td-cssClass=\\\"'text-sm text-nowrap'\\\">\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Warning: React does not recognize the `data-td-cssClass` prop on a DOM element.\\nIf you intentionally want it to appear in the DOM as a custom attribute,\\nspell it as lowercase `data-td-cssclass` instead\\n\\n// Before\\n<td width=\\\"35%\\\" data-td-cssClass=\\\"'text-sm text-nowrap'\\\">\\n\\n// After\\n<td width=\\\"35%\\\" data-td-cssclass=\\\"'text-sm text-nowrap'\\\">\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Failed to execute 'insertBefore' on 'Node':\\nThe node before which the new node is to be inserted is not a child of this node.\\n\\nclass EmpPicker extends React.Component{\\n\\n    render(){\\n        // ...\\n        return <div ref={ele => this._dom.root = ele} className={className + ' EmpPicker' + (advance ? ' adv' : '')}>\\n            {empty && loading ? <div className={'loading loading-md'} /> : null}\\n            {empty && !loading ? <div className={'notice ico ico-s ico-alert'}>\\u7121\\u7B26\\u5408\\u689D\\u4EF6\\u7684\\u54E1\\u5DE5</div> : null}\\n            <span ref={ele => this._dom.picker = ele} />\\n            {advance && !empty ? <span ref={ele => this._dom.advBtn = ele}\\n                                    className={'-adv btn btn-white btn-sm ico ico-search' + (adv ? ' active' : '')}\\n                                    onClick={_advMode} /> : null }\\n            {advance && !empty ? <_AdvPanel ref={ele => this.advPanel = ele} parent={this} api={url ? url : null} /> : null}\\n        </div>\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"diff 1:2,4,11,18\",\n    \"diff\": true,\n    \"1:2,4,11,18\": true\n  }), \"Failed to execute 'insertBefore' on 'Node':\\nThe node before which the new node is to be inserted is not a child of this node.\\n\\nclass EmpPicker extends React.Component{\\n\\n    render(){\\n        // ...\\n        return <div ref={ele => this._dom.root = ele} className={className + ' EmpPicker' + (advance ? ' adv' : '')}>\\n            {empty && loading ? <div className={'loading loading-md'} /> : null}\\n            {empty && !loading ? <div className={'notice ico ico-s ico-alert'}>\\u7121\\u7B26\\u5408\\u689D\\u4EF6\\u7684\\u54E1\\u5DE5</div> : null}\\n            <span ref={ele => this._dom.picker = ele} />\\n            {advance && !empty ? <span ref={ele => this._dom.advBtn = ele}\\n                                    className={'-adv btn btn-white btn-sm ico ico-search' + (adv ? ' active' : '')}\\n                                    onClick={_advMode} /> : null }\\n            {advance && !empty ? <_AdvPanel ref={ele => this.advPanel = ele} parent={this} api={url ? url : null} /> : null}\\n        </div>\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"diff 1:2,11:12\",\n    \"diff\": true,\n    \"1:2,11:12\": true\n  }), \"Failed to execute 'insertBefore' on 'Node':\\nThe node before which the new node is to be inserted is not a child of this node.\\n\\nclass EmpPicker extends React.Component{\\n\\n    render(){\\n        // ...\\n        return <div ref={ele => this._dom.root = ele} className={className + ' EmpPicker' + (advance ? ' adv' : '')}>\\n            {empty && loading ? <div className={'loading loading-md'} /> : null}\\n            {empty && !loading ? <div className={'notice ico ico-s ico-alert'}>\\u7121\\u7B26\\u5408\\u689D\\u4EF6\\u7684\\u54E1\\u5DE5</div> : null}\\n            <div></div>\\n            <span ref={ele => this._dom.picker = ele} />\\n            {advance && !empty ? <span ref={ele => this._dom.advBtn = ele}\\n                                    className={'-adv btn btn-white btn-sm ico ico-search' + (adv ? ' active' : '')}\\n                                    onClick={_advMode} /> : null }\\n            {advance && !empty ? <_AdvPanel ref={ele => this.advPanel = ele} parent={this} api={url ? url : null} /> : null}\\n        </div>\\n    }\\n}\\n\"))), mdx(\"hr\", null), mdx(\"p\", null, \"thank you ~ \\u2764\\uFE0F\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7b6d74c5-ae13-5191-8b20-552a1d91e72b","slug":"/presentation/public/0","title":"React 15.6.2 -> 16.12.0"}}}