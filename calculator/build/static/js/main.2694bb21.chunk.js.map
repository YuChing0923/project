{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["App","useState","answer","setAnswer","calcTemp","setCalcTemp","operatorTemp","setOperatorTemp","clearAns","setClearAns","number","controller","inputCaculate","operator","result","Number","String","className","map","element","index","onClick","input","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMA8FeA,MA3Ff,WAAgB,IAAD,EACeC,mBAAS,KADxB,mBACNC,EADM,KACEC,EADF,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAG2BJ,mBAAS,IAHpC,mBAGNK,EAHM,KAGQC,EAHR,OAImBN,oBAAS,GAJ5B,mBAINO,EAJM,KAIIC,EAJJ,OAKIR,mBAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAtES,EALM,sBAMQT,mBAAS,CAAC,IAAK,IAAK,IAAK,MAAvCU,EANM,oBAwBPC,EAAgB,SAACC,GAErB,GADAJ,GAAY,GACK,KAAbL,EAAiB,CACnB,IAAIU,EACJ,OAAQR,GACN,IAAK,IACHQ,EAASC,OAAOX,GAAYW,OAAOb,GACnC,MACF,IAAK,IACHY,EAASC,OAAOX,GAAYW,OAAOb,GACnC,MACF,IAAK,IACHY,EAASC,OAAOX,GAAYW,OAAOb,GACnC,MACF,IAAK,IACHY,EAASC,OAAOX,GAAYW,OAAOb,GAKvCC,EAAUa,OAAOF,IACjBT,EAAYW,OAAOF,SAEnBT,EAAYW,OAAOd,IAEJ,MAAbW,EACFN,EAAgBM,IAEhBR,EAAY,IACZI,GAAY,KAWhB,OACE,qBAAKQ,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,SAAf,SACE,+BAAOf,MAET,qBAAKe,UAAU,SAAf,SACE,+BACGP,EAAOQ,KAAI,SAACC,EAASC,GAAV,OACV,oBAAIC,QAAS,WAjEL,IAACC,EACL,OADKA,EAiEsBH,GA/DlCX,IAAwC,IAA3BN,EAAOqB,QAAQD,KAC/BnB,EAAUD,EAASc,OAAOM,IAC1Bb,GAAY,KAGmBN,EAAhCK,GAAwB,MAAXN,EAA6Bc,OAAOM,GAAmBpB,EAASc,OAAOM,IACrFb,GAAY,KAyDJ,SAAqD,+BAAOU,KAAdC,MAEhD,oBAAIC,QAAS,kBAAMT,EAAc,MAAjC,SAAuC,4CAG3C,qBAAKK,UAAU,aAAf,SACE,+BACE,oBAAII,QAvBG,WACflB,EAAU,KACVE,EAAY,IACZE,EAAgB,IAChBE,GAAY,IAmBJ,SAAuB,wCACtBE,EAAWO,KAAI,SAACC,EAASC,GAAV,OACd,oBAAIC,QAAS,kBAAMT,EAAcO,IAAjC,SAAuD,+BAAOA,KAAdC,iBCzE/CI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2694bb21.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Big from 'big.js';\n\nfunction App() {\n  const [answer, setAnswer] = useState('0');\n  const [calcTemp, setCalcTemp] = useState('');\n  const [operatorTemp, setOperatorTemp] = useState('');\n  const [clearAns, setClearAns] = useState(true);\n  const [number] = useState(['7', '8', '9', '4', '5', '6', '1', '2', '3', '.', '0']);\n  const [controller] = useState(['/', '*', '+', '-']);\n\n  const inputAnswer = (input) => {\n    if (input === '.') {\n      if (!clearAns && (answer.indexOf(input) === -1)) {\n        setAnswer(answer + String(input));\n        setClearAns(false);\n      }\n    } else {\n      (clearAns || (answer === '0')) ? setAnswer(String(input)): setAnswer(answer + String(input));\n      setClearAns(false);\n    }\n    // const x = new Big(255.5)\n    // console.log(x.plus(5))\n    // console.log(x.toFixed(5))\n    // console.log(x.toPrecision(5))\n  }\n\n  const inputCaculate = (operator) => {\n    setClearAns(true);\n    if (calcTemp !== '') {\n      let result;\n      switch (operatorTemp) {\n        case '+':\n          result = Number(calcTemp) + Number(answer);\n          break;\n        case '-':\n          result = Number(calcTemp) - Number(answer);\n          break;\n        case '*':\n          result = Number(calcTemp) * Number(answer);\n          break;\n        case '/':\n          result = Number(calcTemp) / Number(answer);\n          break;\n        default:\n          break;\n      }\n      setAnswer(String(result));\n      setCalcTemp(String(result));\n    } else {\n      setCalcTemp(String(answer));\n    }\n    if (operator !== '=') {\n      setOperatorTemp(operator);\n    } else {\n      setCalcTemp('');\n      setClearAns(true);\n    }\n  }\n\n  const clearAll = () => {\n    setAnswer('0');\n    setCalcTemp('');\n    setOperatorTemp('');\n    setClearAns(true);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"calculator\">\n        <div className=\"answer\">\n          <span>{answer}</span>\n        </div>\n        <div className=\"number\">\n          <ul>\n            {number.map((element, index) =>\n              <li onClick={() => inputAnswer(element)} key={index}><span>{element}</span></li>\n            )}\n            <li onClick={() => inputCaculate('=')}><span>=</span></li>\n          </ul>\n        </div>\n        <div className=\"controller\">\n          <ul>\n            <li onClick={clearAll}><span>AC</span></li>\n            {controller.map((element, index) =>\n              <li onClick={() => inputCaculate(element)} key={index}><span>{element}</span></li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.scss';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}